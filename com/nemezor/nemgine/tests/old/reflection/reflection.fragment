#version 330 core

in vec3 surfaceNorm;
in vec3 lightVec;
in vec4 textureCoords;

out vec4 finalColor;

uniform sampler2D sampler;

const vec3 lightColor = vec3(0.7, 0.5, 0.2);
const vec4 waterColor = vec4(4.0/255.0, 169.0/255.0, 1.0, 0.7);

void main() {
	
	//vec3 unitNorm = normalize(surfaceNorm);
	//vec3 unitLightVec = normalize(lightVec);
	
	//float nDot1 = dot(unitNorm, unitLightVec);
	//float brightness = max(nDot1, 0.0);
	//vec3 diffuse = brightness * lightColor;
	
	//finalColor = vec4(diffuse, 1.0) * vec4(1.0, 1.0, 1.0, 1.0);
	
	vec2 normalCoords = (textureCoords.xy / textureCoords.w) / 2.0 + 0.5;
	
	finalColor = texture(sampler, vec2(normalCoords.x, -normalCoords.y));
}